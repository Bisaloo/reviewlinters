% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lengths_zero_linter.R
\name{lengths_zero_linter}
\alias{lengths_zero_linter}
\title{Recommend use of lengths() == 0 to check for presence of NULLs in a list}
\usage{
lengths_zero_linter()
}
\description{
Recommend use of lengths() == 0 to check for presence of NULLs in a list
}
\details{
Using \code{lengths(x) == 0} is not strictly equivalent to
\code{vapply(x, is.null, logical(1))}. The \code{lengths()} function returns 0 for
\code{NULL} values, empty lists, and zero-length vectors, while \code{is.null()} only
checks for \code{NULL}.
The change could introduce false positives if \code{x} contains empty but non-NULL
objects.
}
\examples{
# lint
lintr::lint(
  text = 'vapply(x, is.null, logical(1))',
  linters = lengths_zero_linter()
)

lintr::lint(
  text = 'sapply(x, is.null)',
  linters = lengths_zero_linter()
)

# okay
lintr::lint(
  text = 'lengths(x) == 0'
)
}
